[
  {
    "question": "Що таке CSS-препроцесори і які їх переваги?",
    "answers": [
      "Програми для оптимізації CSS-файлів; перевага - зменшення розміру файлів",
      "Програми, які трансформують спеціальні CSS-синтаксиси у стандартний CSS; переваги - змінні, міксини, вкладені правила, функції",
      "Програми для автоматичного створення CSS-стилів; перевага - не потрібно писати CSS вручну",
      "Програми для конвертації CSS в інші мови стилів; перевага - кросбраузерність"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке CSS Grid і в чому його відмінність від Flexbox?",
    "answers": [
      "Grid - для одновимірних макетів, Flexbox - для двовимірних",
      "Grid - для двовимірних макетів (рядки та стовпці), Flexbox - для одновимірних (рядок або стовпець)",
      "Немає різниці, це альтернативні назви однієї технології",
      "Grid працює тільки з текстом, Flexbox - з усіма елементами"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке специфічність селекторів CSS і як вона розраховується?",
    "answers": [
      "Це вага селектора, яка визначає пріоритет стилів: inline стилі > ID > класи/атрибути/псевдокласи > елементи/псевдоелементи",
      "Це кількість CSS правил, які застосовуються до елемента",
      "Це відсоток браузерів, які підтримують даний селектор",
      "Це метрика швидкості застосування стилів селектора браузером"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Що таке CSS-змінні (custom properties) і як їх використовувати?",
    "answers": [
      "Змінні в CSS неможливі, це доступно тільки в препроцесорах",
      "CSS-змінні - це властивості, які можна повторно використовувати, розпочинаються з --, оголошуються через :root і використовуються через var()",
      "CSS-змінні - це просто альтернативні назви для стандартних властивостей CSS",
      "CSS-змінні - це альтернативний синтаксис для застосування інлайн-стилів"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що робить властивість z-index і коли вона ефективна?",
    "answers": [
      "Визначає розмір елемента по осі Z (глибина)",
      "Визначає порядок накладання елементів вздовж осі Z, ефективна тільки для елементів з position відмінним від static",
      "Встановлює індекс елемента в DOM-дереві",
      "Змінює ширину елемента залежно від розміру вікна браузера"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке media queries і як вони використовуються?",
    "answers": [
      "Спеціальні запити для отримання медіа-файлів з сервера",
      "Техніка CSS, яка дозволяє застосовувати різні стилі залежно від характеристик пристрою (ширина екрану, орієнтація тощо)",
      "Запити для визначення швидкості інтернет-з'єднання користувача",
      "Функція для інтеграції медіа-контенту в CSS"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Поясніть принцип роботи Box Model в CSS",
    "answers": [
      "Це система, яка визначає порядок застосування стилів до елементів",
      "Це модель, що описує, як елемент відображається в браузері, складається з контенту, padding, border і margin",
      "Це методика для створення прямокутних елементів на сторінці",
      "Це спосіб розрахунку позиції елементів у Flexbox"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що робить властивість box-sizing і які значення вона може приймати?",
    "answers": [
      "Визначає розмір рамки елемента; може приймати значення thin, medium, thick",
      "Визначає, як розраховується загальна ширина і висота елемента; може приймати значення content-box, border-box, inherit",
      "Встановлює тип боксової моделі; може приймати значення fixed, fluid, responsive",
      "Визначає, чи є елемент боксовою моделлю; може приймати значення true, false, auto"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Які існують методи центрування елемента горизонтально і вертикально?",
    "answers": [
      "Тільки за допомогою властивості center: true",
      "Flexbox (display: flex; justify-content: center; align-items: center) або Grid (display: grid; place-items: center)",
      "Тільки за допомогою властивості vertical-align: middle",
      "Тільки за допомогою властивості text-align: center"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке псевдоелементи і як вони відрізняються від псевдокласів?",
    "answers": [
      "Псевдоелементи (::before, ::after) створюють нові елементи, а псевдокласи (:hover, :focus) описують особливий стан існуючого елемента",
      "Псевдоелементи і псевдокласи - це синоніми",
      "Псевдоелементи використовуються тільки для стилізації тексту, а псевдокласи - для блокових елементів",
      "Псевдоелементи завжди починаються з ::, а псевдокласи з # (як ID селектори)"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Що таке CSS-анімації і як вони відрізняються від переходів (transitions)?",
    "answers": [
      "Вони ідентичні, це просто різні назви",
      "Переходи (transitions) відбуваються при зміні стану і мають тільки початкову і кінцеву точки, анімації можуть мати проміжні кадри і виконуватись автоматично",
      "Анімації працюють тільки з властивостями transform, переходи - з усіма властивостями",
      "Анімації підтримуються тільки в Chrome, переходи - у всіх браузерах"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Який буде результат виконання цього CSS?\n```css\np {\n  color: red;\n}\np {\n  color: blue;\n}\n```",
    "answers": [
      "Всі параграфи будуть червоними",
      "Всі параграфи будуть синіми",
      "Непарні параграфи будуть червоними, парні - синіми",
      "Виникне помилка, бо селектор p використовується двічі"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке CSS-фреймворки і які популярні з них ви знаєте?",
    "answers": [
      "Це програми для генерації CSS; популярні - CSS Generator, Style Maker",
      "Це готові набори CSS-стилів і компонентів; популярні - Bootstrap, Tailwind CSS, Foundation, Bulma",
      "Це інструменти для оптимізації CSS; популярні - CSS Minifier, CSS Compressor",
      "Це технології для створення анімацій; популярні - CSS Animation, Move.css"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке CSS-селектори атрибутів і як вони використовуються?",
    "answers": [
      "Це селектори, які вибирають елементи на основі типу атрибуту: [attribute], [attribute=value], [attribute^=value], [attribute$=value]",
      "Це селектори, які використовуються тільки для елементів форм",
      "Це функція, доступна тільки в препроцесорах, не в чистому CSS",
      "Це селектори для зміни атрибутів через CSS, а не для вибору елементів"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Поясніть різницю між position: relative, absolute, fixed і sticky",
    "answers": [
      "relative - відносно нормального положення, absolute - відносно найближчого позиціонованого предка, fixed - відносно вікна браузера, sticky - комбінація relative і fixed",
      "Всі однаково позиціонують елемент, але з різним z-index",
      "relative і absolute - для десктопних браузерів, fixed і sticky - для мобільних",
      "Це просто синоніми з невеликими візуальними відмінностями"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Як працює властивість 'float' і які проблеми можуть виникнути при її використанні?",
    "answers": [
      "float лише імітує обтікання і не призначений для макетів; проблеми - контейнер не визначає висоту плаваючих елементів (колапс), необхідність очищення (clearfix)",
      "float призначений тільки для вирівнювання тексту; проблеми - не працює з flexbox",
      "float позиціонує елементи фіксовано; проблеми - елементи накладаються один на одного",
      "float визначає порядок у DOM-дереві; проблеми - не працює з CSS Grid"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Що таке CSS-препроцесор SASS/SCSS і які його основні можливості?",
    "answers": [
      "Це програма для мінімізації CSS-файлів; основні можливості - стиснення коду",
      "Це розширення для CSS з додатковими можливостями - змінні, вкладені правила, міксини, успадкування селекторів, математичні операції",
      "Це альтернативний синтаксис для CSS3; основні можливості - краща кросбраузерність",
      "Це спеціальна версія CSS для серверного рендерингу; основні можливості - асинхронне завантаження стилів"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Як працює наслідування (каскадування) в CSS?",
    "answers": [
      "Елемент успадковує властивості від своїх дочірніх елементів",
      "Елемент успадковує властивості від своїх батьківських елементів, але не всі (наприклад, margin і padding не успадковуються)",
      "Каскадування відбувається тільки для елементів з однаковим класом",
      "CSS не підтримує наслідування, кожен елемент стилізується окремо"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке flexbox і які основні властивості flex-контейнера?",
    "answers": [
      "Це технологія для створення гнучких зображень; основні властивості: flex-image, flex-size",
      "Це модель макету для одновимірного розташування елементів; основні властивості: display: flex, flex-direction, justify-content, align-items, flex-wrap",
      "Це властивість для створення адаптивних сайтів; основні властивості: flex-mobile, flex-desktop",
      "Це інструмент для анімації елементів; основні властивості: flex-animation, flex-transition"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що означає підхід 'Mobile First' в CSS?",
    "answers": [
      "Створення окремих версій сайту для мобільних пристроїв і десктопів",
      "Написання стилів спочатку для мобільних пристроїв, а потім розширення їх за допомогою медіа-запитів для більших екранів",
      "Оптимізація CSS-файлів для швидшого завантаження на мобільних пристроях",
      "Використання спеціальних CSS-фреймворків для мобільних пристроїв"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Як працює властивість 'display: none' і чим вона відрізняється від 'visibility: hidden'?",
    "answers": [
      "Вони ідентичні за функціональністю",
      "display: none повністю видаляє елемент з потоку документа (не займає місце), visibility: hidden ховає елемент, але зберігає його місце в макеті",
      "display: none ховає тільки текст, visibility: hidden - всі елементи",
      "display: none працює тільки з блоковими елементами, visibility: hidden - з усіма"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке BEM-методологія в CSS?",
    "answers": [
      "Спосіб оптимізації CSS-файлів для кращої продуктивності",
      "Методологія найменування класів (Block, Element, Modifier), яка допомагає створювати повторно використовувані компоненти",
      "Система для розробки адаптивних сайтів (Browser Efficient Method)",
      "Технологія для автоматичного створення CSS на основі HTML"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке CSS-змінні і як вони оголошуються?",
    "answers": [
      "Це псевдоніми для властивостей, оголошуються через @alias",
      "Це користувацькі властивості, які оголошуються через --name і використовуються через var(--name)",
      "Це зміни властивостей при hover, оголошуються через @change",
      "CSS не підтримує змінні, вони доступні тільки в препроцесорах"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Як працює властивість transform і які основні функції трансформації?",
    "answers": [
      "transform використовується тільки для анімацій; функції: animate(), transition()",
      "transform змінює DOM-структуру; функції: moveNode(), insertNode()",
      "transform змінює відображення елемента; функції: translate(), rotate(), scale(), skew()",
      "transform змінює прозорість елемента; функції: fade(), blur()"
    ],
    "correctAnswerId": 2
  },
  {
    "question": "Що таке CSS Modules і які їх переваги?",
    "answers": [
      "Спеціальні плагіни для браузерів, які розширюють можливості CSS",
      "Техніка, яка дозволяє мати локальну область видимості для стилів, автоматично створюючи унікальні імена класів",
      "Модулі для серверного рендерингу CSS",
      "Метод оптимізації CSS через поділ на модулі"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Який буде результат виконання цього CSS?\n```css\n.box {\n  width: 100px;\n  padding: 20px;\n  box-sizing: content-box;\n}\n```",
    "answers": [
      "Загальна ширина елемента буде 100px включно з padding",
      "Загальна ширина елемента буде 140px (100px контент + 20px padding з кожного боку)",
      "Загальна ширина елемента буде 60px (100px - 40px padding)",
      "Загальна ширина елемента буде 100px, але padding буде всередині"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке CSS-змінні і як вони використовуються?",
    "answers": [
      "Це техніка для зміни CSS у реальному часі через JavaScript",
      "Це властивості користувача, які оголошуються як --name і використовуються через var(--name)",
      "Це інструмент для підключення зовнішніх CSS-файлів",
      "Це метод для збереження рідко використовуваних стилів"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Яка різниця між псевдокласами :nth-child і :nth-of-type?",
    "answers": [
      "Вони абсолютно ідентичні за функціональністю",
      ":nth-child вибирає елемент на основі його позиції серед усіх дочірніх елементів, :nth-of-type - на основі позиції серед елементів того ж типу",
      ":nth-child працює тільки з парними елементами, :nth-of-type - з непарними",
      ":nth-child підтримується всіма браузерами, :nth-of-type - тільки сучасними"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Як створити адаптивне зображення, яке зберігає співвідношення сторін?",
    "answers": [
      "img { responsive: true; }",
      "img { width: 100%; height: auto; }",
      "img { max-width: 100%; width: 100%; }",
      "img { aspect-ratio: auto; }"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке CSS-фреймворк Tailwind CSS, і як він відрізняється від Bootstrap?",
    "answers": [
      "Tailwind автоматично генерує стилі, Bootstrap надає готові компоненти",
      "Tailwind - це препроцесор, Bootstrap - фреймворк",
      "Tailwind використовує utility-first підхід з атомарними класами, Bootstrap надає готові стилізовані компоненти",
      "Tailwind працює тільки з React, Bootstrap - з будь-яким фреймворком"
    ],
    "correctAnswerId": 2
  },
  {
    "question": "Що таке CSS-in-JS і які його переваги?",
    "answers": [
      "Це метод вбудовування CSS безпосередньо в HTML-файли",
      "Це техніка написання CSS усередині JavaScript з локальною областю видимості, динамічними стилями і автоматичним префіксуванням",
      "Це спосіб створення CSS-анімацій через JavaScript",
      "Це метод для конвертації JavaScript у CSS-файли"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Який буде результат наступного CSS?\n```css\n.parent {\n  font-size: 16px;\n}\n.child {\n  font-size: 2em;\n}\n```",
    "answers": [
      "Розмір шрифту дочірнього елемента буде 16px",
      "Розмір шрифту дочірнього елемента буде 32px (16px * 2)",
      "Розмір шрифту дочірнього елемента буде 2px",
      "Розмір шрифту дочірнього елемента буде 18px (16px + 2)"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке CSS Houdini і яке його призначення?",
    "answers": [
      "Це фреймворк для створення анімацій",
      "Це набір API, який надає доступ до CSS-рушія браузера, дозволяючи розширювати CSS новими властивостями і можливостями",
      "Це препроцесор для компіляції CSS",
      "Це техніка для приховування елементів на сторінці"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке CSS-змінні і в чому їх перевага перед препроцесорними змінними (SASS, LESS)?",
    "answers": [
      "CSS-змінні можуть змінюватися динамічно через JavaScript і мають доступ до DOM, а препроцесорні обчислюються під час компіляції",
      "CSS-змінні працюють швидше і займають менше пам'яті",
      "CSS-змінні підтримуються всіма браузерами, включаючи IE6",
      "Немає різниці, це однакові технології"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Як працює властивість clip-path і для чого вона використовується?",
    "answers": [
      "Для обрізання тексту, що виходить за межі контейнера",
      "Для створення обмежуючої маски, яка визначає видиму частину елемента через різні форми (коло, багатокутник тощо)",
      "Для визначення шляху анімації елемента",
      "Для позиціонування елемента в 3D-просторі"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке CSS-функція calc() і як вона використовується?",
    "answers": [
      "Функція для розрахунку кольорів в RGB форматі",
      "Функція для обчислення математичних виразів в CSS, що дозволяє змішувати різні одиниці виміру (%, px, vw тощо)",
      "Функція для калькуляції часу виконання CSS-анімацій",
      "Функція для визначення співвідношення сторін елемента"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке CSS Custom Properties (змінні) і як вони використовуються?",
    "answers": [
      "Це властивості, які працюють тільки в IE",
      "Це властивості, які оголошуються з префіксом -- і використовуються через функцію var()",
      "Це спеціальні властивості для мобільних пристроїв",
      "Це властивості, які можна використовувати тільки в медіа-запитах"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Яка різниця між підходами 'mobile-first' і 'desktop-first' в адаптивному дизайні?",
    "answers": [
      "mobile-first означає, що сайт оптимізований тільки для мобільних пристроїв",
      "desktop-first використовує min-width медіа-запити, mobile-first - max-width",
      "mobile-first означає написання базових стилів для мобільної версії і їх розширення для більших екранів, desktop-first - навпаки",
      "Немає різниці, це просто різні назви одного підходу"
    ],
    "correctAnswerId": 2
  },
  {
    "question": "Що таке CSS-анімації і як вони створюються?",
    "answers": [
      "Анімації створюються тільки через JavaScript",
      "Анімації створюються через @keyframes і застосовуються до елементів за допомогою animation-властивостей",
      "Анімації створюються тільки через властивість animate",
      "Анімації створюються тільки через властивість transition"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Поясніть властивість 'will-change' в CSS",
    "answers": [
      "Визначає, які властивості елемента можуть змінюватися в майбутньому, даючи браузеру підказку про оптимізацію",
      "Вказує, які властивості зміняться при наведенні",
      "Визначає, які властивості зміняться при зміні розміру вікна браузера",
      "Це псевдонім для transition-property"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Як працює CSS-властивість 'contain'?",
    "answers": [
      "Утримує елемент в межах батьківського елемента",
      "Повідомляє браузеру, що елемент і його вміст незалежні від решти сторінки, оптимізуючи продуктивність рендерингу",
      "Забороняє елементу мати дочірні елементи",
      "Змінює CSS контейнер елемента"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Для чого використовується CSS-властивість object-fit?",
    "answers": [
      "Для зміни розміру об'єктів на сторінці",
      "Для вказівки, як вміст замінюваних елементів (like <img> or <video>) повинен вписуватися в контейнер (cover, contain, fill, none, scale-down)",
      "Для визначення, чи можна виділяти об'єкт на сторінці",
      "Для визначення позиції об'єкта в 3D-просторі"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке критичний шлях рендерингу (critical rendering path) і як його оптимізувати?",
    "answers": [
      "Це шлях найменшого опору для електричного струму в браузері",
      "Це послідовність кроків, які браузер проходить від отримання HTML до відображення; оптимізація включає мінімізацію блокуючих ресурсів, зменшення розміру CSS, використання async/defer для скриптів",
      "Це шлях, яким користувач переходить по сайту; оптимізується через покращення навігації",
      "Це основні елементи на сторінці; оптимізуються через зменшення їх кількості"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Яка різниця між rem, em і px як одиницями виміру в CSS?",
    "answers": [
      "Немає різниці, це просто різні назви для пікселів",
      "px - фіксована одиниця, em - відносно розміру шрифту батьківського елемента, rem - відносно розміру шрифту кореневого елемента",
      "px використовується для відстаней, em - для шрифтів, rem - для відступів",
      "px - для десктопів, em - для планшетів, rem - для мобільних пристроїв"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Які переваги і недоліки використання CSS-фреймворків?",
    "answers": [
      "Переваги: прискорення розробки, готові компоненти, хороша підтримка браузерів. Недоліки: збільшення розміру файлів, обмежені можливості кастомізації, залежність від конвенцій фреймворку",
      "Немає недоліків, тільки переваги: швидкість розробки і сумісність",
      "Переваги: красивий дизайн. Недоліки: тільки для новачків, професіонали не використовують",
      "Переваги: безпека. Недоліки: погана продуктивність"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Що таке CSS-властивість aspect-ratio і як вона використовується?",
    "answers": [
      "Властивість для встановлення співвідношення сторін елемента (наприклад, 16/9) без необхідності обчислювати висоту",
      "Властивість для встановлення співвідношення між шириною рамки і контентом",
      "Властивість для встановлення пропорцій між різними елементами на сторінці",
      "Властивість для встановлення співвідношення між розміром тексту і контейнера"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Що означає абревіатура CSSOM?",
    "answers": [
      "CSS Object Model - інтерфейс програмування для роботи з CSS через JavaScript, аналог DOM для стилів",
      "CSS Operating System Module - модуль для інтеграції CSS з операційною системою",
      "Content Style Sheet Object Manager - менеджер стилів контенту",
      "Cross-Site Scripting Object Method - метод для захисту від XSS-атак"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Що таке CSS Containment?",
    "answers": [
      "Техніка для створення контейнерів фіксованого розміру",
      "Специфікація, яка дозволяє ізолювати елемент від решти сторінки для оптимізації продуктивності рендерингу",
      "Метод для контролю за областю видимості стилів",
      "Стандарт для групування селекторів CSS"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке CSS-властивість gap і де вона використовується?",
    "answers": [
      "Визначає відстань між буквами в тексті",
      "Визначає відстань між колонками в колоночному макеті",
      "Визначає відступ між елементами в Flexbox і Grid-контейнерах",
      "Визначає прозорість елементів при накладанні"
    ],
    "correctAnswerId": 2
  },
  {
    "question": "Який буде результат наступного CSS?\n```css\n.element {\n  background-color: red !important;\n}\n.element {\n  background-color: blue;\n}\n```",
    "answers": [
      "Фон буде червоним через !important",
      "Фон буде синім, бо це останнє правило",
      "Браузер випадково вибере колір",
      "Виникне помилка через конфлікт стилів"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Що таке стратегія 'content-visibility' в CSS?",
    "answers": [
      "Визначає, чи видно вміст елемента при прокручуванні",
      "Оптимізація рендерингу, яка дозволяє пропустити рендеринг елементів, які знаходяться поза областю перегляду",
      "Встановлює видимість вмісту при друку сторінки",
      "Контролює видимість елементів у режимі високої контрастності"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке CSS Subgrid і яка його основна перевага?",
    "answers": [
      "Це функція, яка дозволяє дочірнім grid-елементам успадковувати структуру сітки батьківського grid-контейнера",
      "Це техніка для створення вкладених таблиць стилів",
      "Це метод для створення підсіток внутрішніх елементів без зв'язку з батьківською сіткою",
      "Це спосіб розділити CSS-файли на менші частини для кращої продуктивності"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке aspect-ratio в CSS і як цю властивість використовувати?",
    "answers": [
      "Встановлює відношення кількості текстових елементів до графічних на сторінці",
      "Керує позиціонуванням елементів в 3D-просторі",
      "Контролює співвідношення сторін елемента (ширина/висота), спрощуючи створення адаптивних елементів",
      "Визначає, скільки місця займає елемент відносно інших елементів на сторінці"
    ],
    "correctAnswerId": 2
  },
  {
    "question": "Який принцип роботи властивості mix-blend-mode в CSS?",
    "answers": [
      "Змішує кольори елемента з кольорами фону сторінки",
      "Встановлює спосіб змішування вмісту елемента з його батьківським елементом та фоном",
      "Створює ефект градієнта між двома сусідніми елементами",
      "Автоматично підбирає кольори для елемента на основі його оточення"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Яка різниця між псевдоелементами ::before і ::after?",
    "answers": [
      "::before створює вміст до першого дочірнього елемента, ::after - після останнього дочірнього елемента",
      "::before додає вміст на початку вмісту елемента, ::after - в кінці вмісту елемента",
      "::before застосовується до тексту, ::after - до блокових елементів",
      "::before додає елементи без взаємодії, ::after - інтерактивні елементи"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що робить CSS-атрибут counter-increment і як він використовується?",
    "answers": [
      "Підраховує кількість елементів на сторінці",
      "Створює та збільшує лічильник, який можна використовувати з функцією counter() для автоматичної нумерації елементів",
      "Збільшує значення числових властивостей при анімації",
      "Керує швидкістю анімаційних ефектів"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Як працює властивість overscroll-behavior?",
    "answers": [
      "Визначає поведінку елемента при прокручуванні за його межі (запобігає поширенню скролу на батьківські елементи)",
      "Встановлює максимальну швидкість прокручування на сенсорних пристроях",
      "Створює ефект перехресної прокрутки для таблиць",
      "Регулює інерцію прокрутки на мобільних пристроях"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Що таке стековий контекст (stacking context) у CSS і як він впливає на відображення елементів?",
    "answers": [
      "Це механізм для розміщення елементів у вертикальній стопці за допомогою Flexbox",
      "Це система керування накладанням елементів, яка визначає, як вони розташовуються вздовж осі Z",
      "Це метод для організації стилів у стеку викликів JavaScript",
      "Це техніка для створення багатошарових фонів за допомогою CSS"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Яке призначення CSS-властивості all?",
    "answers": [
      "Застосовує один стиль до всіх елементів на сторінці",
      "Вибирає всі елементи для застосування наступних стилів",
      "Скидає всі властивості елемента до їх початкових або успадкованих значень за допомогою значень initial, inherit, unset або revert",
      "Встановлює глобальні стилі, які не можуть бути перевизначені"
    ],
    "correctAnswerId": 2
  },
  {
    "question": "Як працює CSS-функція minmax() у Grid Layout?",
    "answers": [
      "Знаходить середнє арифметичне між мінімальним і максимальним значеннями",
      "Встановлює мінімальні та максимальні розміри для елементів grid-сітки",
      "Визначає діапазон значень для розміру треку (рядка або стовпця) у grid-сітці",
      "Встановлює мінімальний і максимальний розмір для елемента при зміні розміру вікна"
    ],
    "correctAnswerId": 2
  },
  {
    "question": "Що таке CSS-властивість place-items і які значення вона поєднує?",
    "answers": [
      "Поєднує властивості place-top та place-bottom",
      "Поєднує властивості align-items та justify-items для одночасного вирівнювання по обох осях",
      "Встановлює позицію елементів на сторінці в абсолютних координатах",
      "Поєднує властивості margin та padding для створення відступів з усіх боків"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Як працює CSS-властивість backdrop-filter?",
    "answers": [
      "Змінює колір фону при наведенні курсора",
      "Створює ефект глибини для елемента за допомогою тіней",
      "Застосовує графічні ефекти (розмиття, зміна кольору) до області позаду елемента",
      "Обрізає зображення на задньому фоні за певною формою"
    ],
    "correctAnswerId": 2
  },
  {
    "question": "Що таке каскадні шари (CSS Cascade Layers) і для чого вони використовуються?",
    "answers": [
      "Це різні кольорові шари для створення градієнтів",
      "Це спосіб впорядкування з-індексів елементів",
      "Це метод для накладання зображень один на одного",
      "Це механізм для явного управління порядком каскаду стилів через @layer, що дозволяє краще контролювати пріоритети правил"
    ],
    "correctAnswerId": 3
  },
  {
    "question": "Яка різниця між властивостями initial, inherit та unset у CSS?",
    "answers": [
      "initial встановлює значення за замовчуванням браузера, inherit успадковує значення від батьківського елемента, unset діє як inherit для успадкованих властивостей і як initial для неуспадкованих",
      "Всі ці властивості роблять одне й те саме - скидають стилі до значень за замовчуванням",
      "initial встановлює перше задане значення, inherit - останнє, unset - середнє",
      "initial застосовується до тексту, inherit - до блокових елементів, unset - до зображень"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Яке призначення CSS-властивості isolation?",
    "answers": [
      "Ізолює елемент від інших, запобігаючи взаємодії з користувачем",
      "Створює новий контекст накладання (stacking context) без зміни z-index",
      "Приховує елемент від екранних читачів для покращення доступності",
      "Запобігає застосуванню глобальних стилів до елемента"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Які методи існують для візуального приховування елемента, який повинен залишатися доступним для екранних читачів?",
    "answers": [
      "visibility: hidden; або display: none;",
      "opacity: 0; та pointer-events: none;",
      "position: absolute; left: -9999px; або text-indent: -9999px;",
      "hidden: true; або screen-reader-only: true;"
    ],
    "correctAnswerId": 2
  },
  {
    "question": "Що таке CSS-властивість container-query і як вона відрізняється від media-query?",
    "answers": [
      "container-query - це застаріла версія media-query",
      "container-query дозволяє застосовувати стилі в залежності від розміру контейнера, а не від розміру вікна перегляду, як media-query",
      "container-query працює лише з Flexbox, а media-query - з усіма елементами",
      "container-query працює лише на мобільних пристроях, а media-query - на всіх пристроях"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Який ефект має властивість filter: saturate(200%)?",
    "answers": [
      "Збільшує яскравість зображення на 200%",
      "Додає ефект сепії з інтенсивністю 200%",
      "Збільшує контрастність зображення в 2 рази",
      "Збільшує інтенсивність кольорів (насиченість) зображення в 2 рази"
    ],
    "correctAnswerId": 3
  },
  {
    "question": "Яка CSS-властивість використовується для створення стовпчикового тексту (як у газетах)?",
    "answers": ["text-columns", "column-count", "multi-column", "text-flow"],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке CSS Paint API і для чого він використовується?",
    "answers": [
      "API для малювання CSS-анімацій",
      "API для створення нестандартних CSS-селекторів",
      "Частина CSS Houdini, яка дозволяє програмно створювати CSS-зображення через JavaScript",
      "API для роботи з кольорами в CSS"
    ],
    "correctAnswerId": 2
  },
  {
    "question": "Яке призначення CSS-функції min()?",
    "answers": [
      "Вибирає найменше значення з переданих аргументів, корисно для адаптивного дизайну",
      "Задає мінімальне значення для анімаційних ефектів",
      "Встановлює мінімальний z-index для елемента",
      "Створює мінімальний рівень прозорості"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Як правильно використовувати CSS-змінні в медіа-запитах?",
    "answers": [
      "Медіа-запити не підтримують CSS-змінні",
      "У селекторі :root оновлюйте значення змінних всередині медіа-запитів",
      "Використовуйте спеціальний синтаксис @media var(--name) для створення динамічних медіа-запитів",
      "Медіа-запити можуть містити тільки вбудовані CSS-змінні"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що робить CSS-властивість text-rendering?",
    "answers": [
      "Встановлює метод рендерингу тексту, оптимізуючи швидкість, розбірливість або геометричну точність",
      "Визначає, як текст буде відображатися на принтері",
      "Контролює плавність анімації тексту",
      "Встановлює метод відображення тексту при повільному з'єднанні"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Що таке CSS Shapes і як вони впливають на обтікання текстом?",
    "answers": [
      "CSS Shapes - це спеціальні теги для створення фігур в HTML",
      "CSS Shapes - це властивості для задання форми тексту (вигнутий, круглий текст)",
      "CSS Shapes дозволяють визначити нестандартні форми для обтікання елементів текстом, а не тільки прямокутники",
      "CSS Shapes - це спосіб створення графічних елементів без використання зображень"
    ],
    "correctAnswerId": 2
  },
  {
    "question": "Що таке CSS Scroll Snap і як він працює?",
    "answers": [
      "Це властивість для фіксації елементів при прокручуванні сторінки",
      "Це техніка для плавного прокручування сторінки до певних точок під час скролу",
      "Це метод для створення фіксованого заголовка при прокручуванні",
      "Це функція для автоматичного прокручування сторінки"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Яке призначення атрибута loading=\"lazy\" для зображень і як це пов'язано з CSS?",
    "answers": [
      "Це CSS-властивість для повільного відображення зображень",
      "Це HTML-атрибут, який можна доповнити CSS-стилями для кращого користувацького досвіду під час лінивого завантаження",
      "Це спосіб затримати завантаження CSS до появи зображення",
      "Це атрибут, який дозволяє застосовувати CSS-фільтри до зображень поступово"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Які є способи оптимізації CSS для покращення продуктивності?",
    "answers": [
      "Використання більшої кількості вкладених селекторів для кращої специфічності",
      "Додавання коментарів до кожного правила CSS",
      "Об'єднання селекторів, мінімізація файлів, уникнення надмірної специфічності, використання шрифтів system-ui",
      "Зменшення кількості класів та використання більше інлайн-стилів"
    ],
    "correctAnswerId": 2
  },
  {
    "question": "Що робить CSS-властивість font-display і які значення вона може приймати?",
    "answers": [
      "Змінює гарнітуру шрифту; значення: serif, sans-serif, monospace",
      "Керує відображенням веб-шрифтів під час завантаження; значення: auto, block, swap, fallback, optional",
      "Встановлює розмір шрифту; значення: small, medium, large",
      "Визначає, чи буде текст відображатися; значення: visible, hidden"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що означає CSS-правило @supports і як воно використовується?",
    "answers": [
      "Перевіряє підтримку браузером певної CSS-властивості перед її застосуванням",
      "Визначає, які браузери підтримуються для поточного стилю",
      "Вказує мінімальну версію CSS, необхідну для роботи стилів",
      "Визначає альтернативні стилі для застарілих браузерів"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Як створити CSS-градієнт, який повторюється (repeating-linear-gradient)?",
    "answers": [
      "gradient(repeat, red, blue)",
      "linear-gradient(repeat, red, blue)",
      "repeating-linear-gradient(45deg, red, blue 20px)",
      "repeat(linear-gradient(red, blue))"
    ],
    "correctAnswerId": 2
  },
  {
    "question": "Яке призначення CSS-властивості pointer-events?",
    "answers": [
      "Визначає тип курсора при наведенні на елемент",
      "Керує можливістю елемента бути ціллю подій миші (наприклад, клік)",
      "Створює ефект натискання для інтерактивних елементів",
      "Визначає, як елемент реагує на дотик на сенсорних екранах"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Які переваги має система CSS-препроцесора Less у порівнянні з Sass?",
    "answers": [
      "Less написаний на JavaScript і легше інтегрується з Node.js проектами, має синтаксис ближчий до CSS",
      "Less підтримує більше браузерів, включаючи старі версії IE",
      "Less працює швидше і використовує менше пам'яті",
      "Less має більше вбудованих функцій та міксинів"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Що таке CSS-властивість text-underline-offset?",
    "answers": [
      "Встановлює колір підкреслення тексту",
      "Визначає товщину лінії підкреслення",
      "Встановлює відстань між текстом і лінією підкреслення",
      "Визначає стиль підкреслення (суцільна, пунктирна, хвиляста лінія)"
    ],
    "correctAnswerId": 2
  },
  {
    "question": "Як працює директива @import у CSS і які її недоліки?",
    "answers": [
      "@import використовується для стилізації тегів <import> у HTML",
      "@import дозволяє імпортувати один CSS-файл в інший; недоліки: блокує рендеринг, послідовне завантаження",
      "@import - це застаріла директива, яка більше не підтримується",
      "@import використовується тільки в препроцесорах, але не в чистому CSS"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке CSS-атрибут empty-cells і як він використовується в таблицях?",
    "answers": [
      "Встановлює, чи відображати рамки навколо порожніх клітинок у таблиці",
      "Автоматично об'єднує порожні клітинки для оптимізації простору",
      "Заповнює порожні клітинки значенням за замовчуванням",
      "Приховує рядки, які містять порожні клітинки"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Яка різниця між селекторами :nth-child та :nth-last-child?",
    "answers": [
      "Немає різниці, це просто альтернативні назви",
      ":nth-child відраховує елементи з початку, :nth-last-child - з кінця списку",
      ":nth-child працює з усіма дочірніми елементами, :nth-last-child - тільки з останніми 10",
      ":nth-child підтримується всіма браузерами, :nth-last-child - тільки сучасними"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке інлайн-стилі і які їх недоліки?",
    "answers": [
      "Це стилі, застосовані через атрибут style; недоліки: важко підтримувати, дублювання коду, висока специфічність",
      "Це стилі, які впливають тільки на inline-елементи",
      "Це стилі, які автоматично генеруються браузером",
      "Це стилі, які застосовуються тільки до тексту, а не до блокових елементів"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Яка різниця між ідентифікаторами (#id) та класами (.class) в CSS?",
    "answers": [
      "ID і класи функціонально ідентичні, але ID зарезервовані для JavaScript",
      "Класи можна використовувати для багатьох елементів, ID - унікальний для одного елементу; ID має вищу специфічність",
      "ID використовуються для блокових елементів, класи - для інлайнових",
      "ID підтримуються всіма браузерами, класи - тільки сучасними"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке CSS-властивість hyphens і як вона працює?",
    "answers": [
      "Керує переносом слів по складах; значення: none, manual, auto",
      "Визначає стиль дефісів у тексті",
      "Вказує на кількість дефісів, які можуть бути використані в тексті",
      "Встановлює відстань між дефісами в тексті"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Що таке CSS-властивість currentColor?",
    "answers": [
      "Функція для отримання поточного кольору зображення",
      "Властивість, яка динамічно змінює колір елемента в залежності від теми",
      "Ключове слово, яке представляє поточне значення властивості color елемента",
      "Спеціальний селектор для елементів з однаковим кольором"
    ],
    "correctAnswerId": 2
  },
  {
    "question": "Яка різниця між властивостями opacity та rgba() для створення прозорості?",
    "answers": [
      "opacity робить прозорим увесь елемент разом з дочірніми, rgba() - впливає тільки на колір, до якого застосовується",
      "opacity підтримується більшістю браузерів, rgba() - тільки сучасними",
      "opacity можна анімувати, rgba() - ні",
      "opacity працює тільки з зображеннями, rgba() - з будь-якими елементами"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Що таке CSS-властивість touch-action?",
    "answers": [
      "Встановлює колір елемента при дотику на сенсорних екранах",
      "Визначає, як елемент реагує на дотик (прокручування, масштабування, панорамування)",
      "Змінює розмір елемента при дотику для кращої взаємодії на мобільних пристроях",
      "Додає ефект натискання для всіх елементів на сенсорних пристроях"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Як працює CSS-властивість mask і для чого вона використовується?",
    "answers": [
      "Для створення маскованих паролів у формах",
      "Для приховування частини фону елемента",
      "Для створення фігурних рамок навколо елементів",
      "Для часткового приховування або відображення елемента за допомогою зображення, градієнта або форми як маски"
    ],
    "correctAnswerId": 3
  },
  {
    "question": "Яка роль атрибута !important у CSS і коли його варто використовувати?",
    "answers": [
      "Використовується для позначення важливих стилів для документації; не впливає на рендеринг",
      "Підвищує специфічність правила, перекриваючи інші стилі; варто використовувати рідко, переважно для перевизначення стилів третіх сторін",
      "Збільшує швидкість застосування стилів браузером; використовується для оптимізації",
      "Робить стиль видимим навіть при друку сторінки; використовується для друкованих версій"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке CSS logical properties?",
    "answers": [
      "Властивості, які працюють лише з логічними значеннями (true/false)",
      "Властивості, які автоматично змінюються в залежності від логіки сайту",
      "Властивості, які використовують напрямок письма й потоку тексту замість фізичних напрямків (inline-start замість left)",
      "Властивості, які застосовуються тільки коли виконується певна логічна умова"
    ],
    "correctAnswerId": 2
  },
  {
    "question": "Як створити багатоколірну рамку в CSS?",
    "answers": [
      "За допомогою властивості border-color: multicolor",
      "За допомогою комбінації властивостей border-image та linear-gradient",
      "Використовуючи властивість multi-border з переліком кольорів",
      "CSS не підтримує багатоколірні рамки без використання зображень"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Що таке CSS-властивість inset і як вона використовується?",
    "answers": [
      "Скорочена форма запису для властивостей top, right, bottom, left для позиціонованих елементів",
      "Властивість для створення внутрішніх тіней елемента",
      "Визначає, наскільки елемент має бути втиснутий у свій контейнер",
      "Встановлює відступи для вкладених елементів"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Що таке intrinsic sizing у CSS?",
    "answers": [
      "Підхід до розміру елементів на основі їх внутрішнього вмісту за допомогою значень min-content, max-content, fit-content",
      "Метод для автоматичного розрахунку розміру шрифту на основі розміру контейнера",
      "Техніка для збереження співвідношення сторін зображень",
      "Спосіб розміщення елементів відносно один одного всередині контейнера"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Що таке CSS-оптимізація Critical Path і як вона реалізується?",
    "answers": [
      "Методика пошуку найкоротшого шляху до елемента в DOM-дереві",
      "Техніка для оптимізації розміщення критично важливих елементів на сторінці",
      "Виділення та вбудовування критичних CSS-стилів, необхідних для відображення видимої частини сторінки, а завантаження інших стилів відкладається",
      "Метод для прискорення анімацій за допомогою апаратного прискорення"
    ],
    "correctAnswerId": 2
  },
  {
    "question": "Яке призначення CSS-функції clamp()?",
    "answers": [
      "Обмежує анімації елемента в заданому діапазоні",
      "Обмежує прозорість елемента між двома значеннями",
      "Дозволяє вказати мінімальне, бажане та максимальне значення для властивості",
      "Фіксує елемент у певному положенні при прокручуванні"
    ],
    "correctAnswerId": 2
  },
  {
    "question": "Що таке CSS Overscroll Behavior?",
    "answers": [
      "Властивість, яка контролює поведінку сторінки, коли користувач прокручує за межі контенту",
      "Техніка для створення ефекту паралаксу при прокручуванні",
      "Метод для автоматичної прокрутки до певних елементів",
      "Спосіб уповільнення прокрутки для покращення читабельності"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Яка різниця між одиницями виміру vh/vw та %?",
    "answers": [
      "vh/vw відносні до розміру вікна перегляду, % - відносні до розміру батьківського елемента",
      "vh/vw використовуються тільки для розмірів тексту, % - для всіх властивостей",
      "vh/vw підтримуються тільки сучасними браузерами, % - всіма",
      "vh/vw і % повністю ідентичні, це просто альтернативні записи"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Що робить CSS-функція attr() і де вона може використовуватися?",
    "answers": [
      "Встановлює атрибути для елемента через CSS",
      "Отримує значення атрибута HTML-елемента для використання в CSS, найчастіше з content у псевдоелементах",
      "Перевіряє наявність атрибута в елементі для умовної стилізації",
      "Дозволяє анімувати атрибути HTML-елементів"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Як працює CSS Scroll Margin?",
    "answers": [
      "Встановлює відступи для елементів, які прокручуються",
      "Визначає відстань між елементами в скролінговому контейнері",
      "Встановлює поля навколо елемента під час прокручування до нього (наприклад, через scroll-behavior: smooth)",
      "Створює відступи від країв вікна при прокручуванні сторінки"
    ],
    "correctAnswerId": 2
  },
  {
    "question": "Що таке CSS-властивість writing-mode?",
    "answers": [
      "Визначає режим написання тексту (горизонтальний або вертикальний)",
      "Встановлює шрифт для написання тексту",
      "Визначає, як текст буде відображатися при друку",
      "Вказує, чи можна редагувати текст на сторінці"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Яка різниця між селекторами A > B та A B у CSS?",
    "answers": [
      "A > B - означає, що B є нащадком A на будь-якому рівні вкладеності; A B - означає, що B є безпосереднім дочірнім елементом A",
      "A > B - означає, що B є безпосереднім дочірнім елементом A; A B - означає, що B є нащадком A на будь-якому рівні вкладеності",
      "A > B вибирає елементи з більшим пріоритетом, ніж A B",
      "A > B працює тільки з тегами, A B - з класами та ID"
    ],
    "correctAnswerId": 1
  },
  {
    "question": "Яке призначення CSS-функції min-max()?",
    "answers": [
      "Повертає середнє значення між мінімальним і максимальним",
      "Встановлює мінімальний і максимальний розмір елемента",
      "Така функція не існує в CSS (правильні функції: min() і max())",
      "Визначає діапазон допустимих значень для властивості"
    ],
    "correctAnswerId": 2
  },
  {
    "question": "Що таке CSS-властивість scroll-behavior?",
    "answers": [
      "Визначає, чи буде прокрутка до елементів плавною або миттєвою",
      "Визначає напрямок прокрутки для елементів (горизонтальна чи вертикальна)",
      "Встановлює швидкість прокрутки сторінки",
      "Визначає, чи буде сторінка автоматично прокручуватися до якірних посилань"
    ],
    "correctAnswerId": 0
  },
  {
    "question": "Як працює властивість backface-visibility у CSS і коли вона використовується?",
    "answers": [
      "Робить фон елемента видимим або невидимим",
      "Визначає, чи буде видно зворотню сторону елемента, коли він обернений до користувача зворотньою стороною (у 3D-трансформаціях)",
      "Встановлює прозорість для заднього плану елемента",
      "Визначає, чи буде видно елемент при перегляді зі зворотнього боку екрану"
    ],
    "correctAnswerId": 1
  }
]
